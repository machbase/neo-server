syntax = "proto3";

package mgmt;

option go_package = "github.com/machbase/neo-grpc/mgmt";

service Management {
    rpc ListKey(ListKeyRequest) returns (ListKeyResponse) {}
    rpc GenKey(GenKeyRequest) returns (GenKeyResponse) {}
    rpc DelKey(DelKeyRequest) returns (DelKeyResponse) {}
    rpc ServerKey(ServerKeyRequest) returns (ServerKeyResponse) {}
    rpc ListSshKey(ListSshKeyRequest) returns (ListSshKeyResponse) {}
    rpc AddSshKey(AddSshKeyRequest) returns (AddSshKeyResponse) {}
    rpc DelSshKey(DelSshKeyRequest) returns (DelSshKeyResponse) {}
    rpc Shutdown(ShutdownRequest) returns (ShutdownResponse) {}
    rpc ListShell(ListShellRequest) returns (ListShellResponse) {}
    rpc AddShell(AddShellRequest) returns (AddShellResponse) {}
    rpc DelShell(DelShellRequest) returns (DelShellResponse) {}
}

message ListShellRequest{
}

message ListShellResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
    repeated ShellDefinition shells = 4;
}

message ShellDefinition {
    string id = 1;
    string name = 2;
    string command = 3;
}

message AddShellRequest{
    string name = 1;
    string command = 2;
}

message AddShellResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
}

message DelShellRequest{
    string id = 1;
}

message DelShellResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
}

message ListSshKeyRequest {
}

message ListSshKeyResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
    repeated SshKey sshKeys = 4;
}

message SshKey {
    string keyType = 1;
    string fingerprint = 2;
    string comment = 3;
}

message AddSshKeyRequest {
    string keyType = 1;
    string key = 2;
    string comment = 3;
}

message AddSshKeyResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
}

message DelSshKeyRequest {
    string fingerprint = 1;
}

message DelSshKeyResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
}

message ListKeyRequest {
}

message ListKeyResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
    repeated KeyInfo keys = 4;
}

message GenKeyRequest {
    string id = 1;
    string type = 2;      // rsa, ecdsa
    int64  notBefore = 3; // unix epoch in seconds
    int64  notAfter = 4;  // unix epoch in seconds
}

message GenKeyResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
    string id = 4;
    string token = 5;
    string key = 6;
    string certificate = 7;
}

message DelKeyRequest {
    string id = 1;
}

message DelKeyResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
}

message KeyInfo {
    string id = 1;
    int64  notBefore = 3;
    int64  notAfter = 4;
}

message ServerKeyRequest {
}

message ServerKeyResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
    string certificate = 4;
}

message ShutdownRequest {
}

message ShutdownResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
}

message ServerInfoRequest {
}

message ServerInfo {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
    Version version = 4;
    Runtime runtime = 5;
}

message Version {
    int32 major = 1;
    int32 minor = 2;
    int32 patch = 3;
    string gitSHA = 4;
    string buildTimestamp = 5;
    string buildCompiler = 6;
    string engine = 7;
}

message Runtime {
    string OS             = 1;
    string arch           = 2;
    int32  pid            = 3;
    int64  uptimeInSecond = 4;
    int32  processes      = 5;
    int32  goroutines     = 6;
    uint64  memSys        = 7;
    uint64  memHeapSys    = 8;
    uint64  memHeapAlloc  = 9;
    uint64  memHeapInUse  = 10;
    uint64  memStackSys   = 11;
    uint64  memStackInUse = 12;
}

