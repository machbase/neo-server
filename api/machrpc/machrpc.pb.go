// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: machrpc.proto

package machrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnHandle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handle        string                 `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnHandle) Reset() {
	*x = ConnHandle{}
	mi := &file_machrpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnHandle) ProtoMessage() {}

func (x *ConnHandle) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnHandle.ProtoReflect.Descriptor instead.
func (*ConnHandle) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{0}
}

func (x *ConnHandle) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

type ConnRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnRequest) Reset() {
	*x = ConnRequest{}
	mi := &file_machrpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnRequest) ProtoMessage() {}

func (x *ConnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnRequest.ProtoReflect.Descriptor instead.
func (*ConnRequest) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{1}
}

func (x *ConnRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ConnRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ConnResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	Conn          *ConnHandle            `protobuf:"bytes,4,opt,name=conn,proto3" json:"conn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnResponse) Reset() {
	*x = ConnResponse{}
	mi := &file_machrpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnResponse) ProtoMessage() {}

func (x *ConnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnResponse.ProtoReflect.Descriptor instead.
func (*ConnResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{2}
}

func (x *ConnResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConnResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ConnResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

func (x *ConnResponse) GetConn() *ConnHandle {
	if x != nil {
		return x.Conn
	}
	return nil
}

type ConnCloseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conn          *ConnHandle            `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnCloseRequest) Reset() {
	*x = ConnCloseRequest{}
	mi := &file_machrpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnCloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnCloseRequest) ProtoMessage() {}

func (x *ConnCloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnCloseRequest.ProtoReflect.Descriptor instead.
func (*ConnCloseRequest) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{3}
}

func (x *ConnCloseRequest) GetConn() *ConnHandle {
	if x != nil {
		return x.Conn
	}
	return nil
}

type ConnCloseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnCloseResponse) Reset() {
	*x = ConnCloseResponse{}
	mi := &file_machrpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnCloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnCloseResponse) ProtoMessage() {}

func (x *ConnCloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnCloseResponse.ProtoReflect.Descriptor instead.
func (*ConnCloseResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{4}
}

func (x *ConnCloseResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConnCloseResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ConnCloseResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         int64                  `protobuf:"varint,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_machrpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{5}
}

func (x *PingRequest) GetToken() int64 {
	if x != nil {
		return x.Token
	}
	return 0
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	Token         int64                  `protobuf:"varint,4,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_machrpc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{6}
}

func (x *PingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PingResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PingResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

func (x *PingResponse) GetToken() int64 {
	if x != nil {
		return x.Token
	}
	return 0
}

type AppenderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conn          *ConnHandle            `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty"`
	TableName     string                 `protobuf:"bytes,2,opt,name=tableName,proto3" json:"tableName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppenderRequest) Reset() {
	*x = AppenderRequest{}
	mi := &file_machrpc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppenderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppenderRequest) ProtoMessage() {}

func (x *AppenderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppenderRequest.ProtoReflect.Descriptor instead.
func (*AppenderRequest) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{7}
}

func (x *AppenderRequest) GetConn() *ConnHandle {
	if x != nil {
		return x.Conn
	}
	return nil
}

func (x *AppenderRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type AppenderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	Handle        *AppenderHandle        `protobuf:"bytes,4,opt,name=handle,proto3" json:"handle,omitempty"`
	TableName     string                 `protobuf:"bytes,5,opt,name=tableName,proto3" json:"tableName,omitempty"`
	TableType     int32                  `protobuf:"varint,6,opt,name=tableType,proto3" json:"tableType,omitempty"`
	Columns       []*Column              `protobuf:"bytes,7,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppenderResponse) Reset() {
	*x = AppenderResponse{}
	mi := &file_machrpc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppenderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppenderResponse) ProtoMessage() {}

func (x *AppenderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppenderResponse.ProtoReflect.Descriptor instead.
func (*AppenderResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{8}
}

func (x *AppenderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AppenderResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AppenderResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

func (x *AppenderResponse) GetHandle() *AppenderHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *AppenderResponse) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *AppenderResponse) GetTableType() int32 {
	if x != nil {
		return x.TableType
	}
	return 0
}

func (x *AppenderResponse) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type AppenderHandle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handle        string                 `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Conn          *ConnHandle            `protobuf:"bytes,2,opt,name=conn,proto3" json:"conn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppenderHandle) Reset() {
	*x = AppenderHandle{}
	mi := &file_machrpc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppenderHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppenderHandle) ProtoMessage() {}

func (x *AppenderHandle) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppenderHandle.ProtoReflect.Descriptor instead.
func (*AppenderHandle) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{9}
}

func (x *AppenderHandle) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *AppenderHandle) GetConn() *ConnHandle {
	if x != nil {
		return x.Conn
	}
	return nil
}

type AppendData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handle        *AppenderHandle        `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Records       []*AppendRecord        `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendData) Reset() {
	*x = AppendData{}
	mi := &file_machrpc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendData) ProtoMessage() {}

func (x *AppendData) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendData.ProtoReflect.Descriptor instead.
func (*AppendData) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{10}
}

func (x *AppendData) GetHandle() *AppenderHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *AppendData) GetRecords() []*AppendRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type AppendRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tuple         []*AppendDatum         `protobuf:"bytes,1,rep,name=tuple,proto3" json:"tuple,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendRecord) Reset() {
	*x = AppendRecord{}
	mi := &file_machrpc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendRecord) ProtoMessage() {}

func (x *AppendRecord) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendRecord.ProtoReflect.Descriptor instead.
func (*AppendRecord) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{11}
}

func (x *AppendRecord) GetTuple() []*AppendDatum {
	if x != nil {
		return x.Tuple
	}
	return nil
}

type AppendDatum struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*AppendDatum_VInt32
	//	*AppendDatum_VUint32
	//	*AppendDatum_VInt64
	//	*AppendDatum_VUint64
	//	*AppendDatum_VFloat
	//	*AppendDatum_VDouble
	//	*AppendDatum_VString
	//	*AppendDatum_VBool
	//	*AppendDatum_VBytes
	//	*AppendDatum_VIp
	//	*AppendDatum_VTime
	//	*AppendDatum_VNull
	Value         isAppendDatum_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendDatum) Reset() {
	*x = AppendDatum{}
	mi := &file_machrpc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendDatum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendDatum) ProtoMessage() {}

func (x *AppendDatum) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendDatum.ProtoReflect.Descriptor instead.
func (*AppendDatum) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{12}
}

func (x *AppendDatum) GetValue() isAppendDatum_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AppendDatum) GetVInt32() int32 {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VInt32); ok {
			return x.VInt32
		}
	}
	return 0
}

func (x *AppendDatum) GetVUint32() uint32 {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VUint32); ok {
			return x.VUint32
		}
	}
	return 0
}

func (x *AppendDatum) GetVInt64() int64 {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VInt64); ok {
			return x.VInt64
		}
	}
	return 0
}

func (x *AppendDatum) GetVUint64() uint64 {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VUint64); ok {
			return x.VUint64
		}
	}
	return 0
}

func (x *AppendDatum) GetVFloat() float32 {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VFloat); ok {
			return x.VFloat
		}
	}
	return 0
}

func (x *AppendDatum) GetVDouble() float64 {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VDouble); ok {
			return x.VDouble
		}
	}
	return 0
}

func (x *AppendDatum) GetVString() string {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VString); ok {
			return x.VString
		}
	}
	return ""
}

func (x *AppendDatum) GetVBool() bool {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VBool); ok {
			return x.VBool
		}
	}
	return false
}

func (x *AppendDatum) GetVBytes() []byte {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VBytes); ok {
			return x.VBytes
		}
	}
	return nil
}

func (x *AppendDatum) GetVIp() string {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VIp); ok {
			return x.VIp
		}
	}
	return ""
}

func (x *AppendDatum) GetVTime() int64 {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VTime); ok {
			return x.VTime
		}
	}
	return 0
}

func (x *AppendDatum) GetVNull() bool {
	if x != nil {
		if x, ok := x.Value.(*AppendDatum_VNull); ok {
			return x.VNull
		}
	}
	return false
}

type isAppendDatum_Value interface {
	isAppendDatum_Value()
}

type AppendDatum_VInt32 struct {
	VInt32 int32 `protobuf:"varint,1,opt,name=v_int32,json=vInt32,proto3,oneof"`
}

type AppendDatum_VUint32 struct {
	VUint32 uint32 `protobuf:"varint,11,opt,name=v_uint32,json=vUint32,proto3,oneof"`
}

type AppendDatum_VInt64 struct {
	VInt64 int64 `protobuf:"varint,2,opt,name=v_int64,json=vInt64,proto3,oneof"`
}

type AppendDatum_VUint64 struct {
	VUint64 uint64 `protobuf:"varint,12,opt,name=v_uint64,json=vUint64,proto3,oneof"`
}

type AppendDatum_VFloat struct {
	VFloat float32 `protobuf:"fixed32,3,opt,name=v_float,json=vFloat,proto3,oneof"`
}

type AppendDatum_VDouble struct {
	VDouble float64 `protobuf:"fixed64,4,opt,name=v_double,json=vDouble,proto3,oneof"`
}

type AppendDatum_VString struct {
	VString string `protobuf:"bytes,5,opt,name=v_string,json=vString,proto3,oneof"`
}

type AppendDatum_VBool struct {
	VBool bool `protobuf:"varint,6,opt,name=v_bool,json=vBool,proto3,oneof"`
}

type AppendDatum_VBytes struct {
	VBytes []byte `protobuf:"bytes,7,opt,name=v_bytes,json=vBytes,proto3,oneof"`
}

type AppendDatum_VIp struct {
	VIp string `protobuf:"bytes,8,opt,name=v_ip,json=vIp,proto3,oneof"`
}

type AppendDatum_VTime struct {
	VTime int64 `protobuf:"varint,9,opt,name=v_time,json=vTime,proto3,oneof"`
}

type AppendDatum_VNull struct {
	VNull bool `protobuf:"varint,10,opt,name=v_null,json=vNull,proto3,oneof"`
}

func (*AppendDatum_VInt32) isAppendDatum_Value() {}

func (*AppendDatum_VUint32) isAppendDatum_Value() {}

func (*AppendDatum_VInt64) isAppendDatum_Value() {}

func (*AppendDatum_VUint64) isAppendDatum_Value() {}

func (*AppendDatum_VFloat) isAppendDatum_Value() {}

func (*AppendDatum_VDouble) isAppendDatum_Value() {}

func (*AppendDatum_VString) isAppendDatum_Value() {}

func (*AppendDatum_VBool) isAppendDatum_Value() {}

func (*AppendDatum_VBytes) isAppendDatum_Value() {}

func (*AppendDatum_VIp) isAppendDatum_Value() {}

func (*AppendDatum_VTime) isAppendDatum_Value() {}

func (*AppendDatum_VNull) isAppendDatum_Value() {}

type AppendDone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	SuccessCount  int64                  `protobuf:"varint,4,opt,name=successCount,proto3" json:"successCount,omitempty"`
	FailCount     int64                  `protobuf:"varint,5,opt,name=failCount,proto3" json:"failCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendDone) Reset() {
	*x = AppendDone{}
	mi := &file_machrpc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendDone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendDone) ProtoMessage() {}

func (x *AppendDone) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendDone.ProtoReflect.Descriptor instead.
func (*AppendDone) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{13}
}

func (x *AppendDone) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AppendDone) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AppendDone) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

func (x *AppendDone) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *AppendDone) GetFailCount() int64 {
	if x != nil {
		return x.FailCount
	}
	return 0
}

type ExplainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conn          *ConnHandle            `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty"`
	Sql           string                 `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	Full          bool                   `protobuf:"varint,3,opt,name=full,proto3" json:"full,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplainRequest) Reset() {
	*x = ExplainRequest{}
	mi := &file_machrpc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplainRequest) ProtoMessage() {}

func (x *ExplainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplainRequest.ProtoReflect.Descriptor instead.
func (*ExplainRequest) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{14}
}

func (x *ExplainRequest) GetConn() *ConnHandle {
	if x != nil {
		return x.Conn
	}
	return nil
}

func (x *ExplainRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ExplainRequest) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

type ExplainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	Plan          string                 `protobuf:"bytes,4,opt,name=plan,proto3" json:"plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplainResponse) Reset() {
	*x = ExplainResponse{}
	mi := &file_machrpc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplainResponse) ProtoMessage() {}

func (x *ExplainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplainResponse.ProtoReflect.Descriptor instead.
func (*ExplainResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{15}
}

func (x *ExplainResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExplainResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ExplainResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

func (x *ExplainResponse) GetPlan() string {
	if x != nil {
		return x.Plan
	}
	return ""
}

type ExecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conn          *ConnHandle            `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty"`
	Sql           string                 `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	Params        []*anypb.Any           `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	mi := &file_machrpc_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRequest.ProtoReflect.Descriptor instead.
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{16}
}

func (x *ExecRequest) GetConn() *ConnHandle {
	if x != nil {
		return x.Conn
	}
	return nil
}

func (x *ExecRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ExecRequest) GetParams() []*anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

type ExecResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	RowsAffected  int64                  `protobuf:"varint,4,opt,name=rowsAffected,proto3" json:"rowsAffected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	mi := &file_machrpc_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResponse.ProtoReflect.Descriptor instead.
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{17}
}

func (x *ExecResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExecResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ExecResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

func (x *ExecResponse) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

type QueryRowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conn          *ConnHandle            `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty"`
	Sql           string                 `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	Params        []*anypb.Any           `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRowRequest) Reset() {
	*x = QueryRowRequest{}
	mi := &file_machrpc_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRowRequest) ProtoMessage() {}

func (x *QueryRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRowRequest.ProtoReflect.Descriptor instead.
func (*QueryRowRequest) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{18}
}

func (x *QueryRowRequest) GetConn() *ConnHandle {
	if x != nil {
		return x.Conn
	}
	return nil
}

func (x *QueryRowRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *QueryRowRequest) GetParams() []*anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

type QueryRowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	Values        []*anypb.Any           `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	RowsAffected  int64                  `protobuf:"varint,5,opt,name=rowsAffected,proto3" json:"rowsAffected,omitempty"`
	Columns       []*Column              `protobuf:"bytes,7,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRowResponse) Reset() {
	*x = QueryRowResponse{}
	mi := &file_machrpc_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRowResponse) ProtoMessage() {}

func (x *QueryRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRowResponse.ProtoReflect.Descriptor instead.
func (*QueryRowResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{19}
}

func (x *QueryRowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryRowResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *QueryRowResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

func (x *QueryRowResponse) GetValues() []*anypb.Any {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *QueryRowResponse) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

func (x *QueryRowResponse) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type QueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conn          *ConnHandle            `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty"`
	Sql           string                 `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	Params        []*anypb.Any           `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_machrpc_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{20}
}

func (x *QueryRequest) GetConn() *ConnHandle {
	if x != nil {
		return x.Conn
	}
	return nil
}

func (x *QueryRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *QueryRequest) GetParams() []*anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

type QueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	RowsHandle    *RowsHandle            `protobuf:"bytes,4,opt,name=rowsHandle,proto3" json:"rowsHandle,omitempty"` // only available if stmt is fetchable
	RowsAffected  int64                  `protobuf:"varint,5,opt,name=rowsAffected,proto3" json:"rowsAffected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	mi := &file_machrpc_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{21}
}

func (x *QueryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *QueryResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

func (x *QueryResponse) GetRowsHandle() *RowsHandle {
	if x != nil {
		return x.RowsHandle
	}
	return nil
}

func (x *QueryResponse) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

type ColumnsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	Columns       []*Column              `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnsResponse) Reset() {
	*x = ColumnsResponse{}
	mi := &file_machrpc_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnsResponse) ProtoMessage() {}

func (x *ColumnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnsResponse.ProtoReflect.Descriptor instead.
func (*ColumnsResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{22}
}

func (x *ColumnsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ColumnsResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ColumnsResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

func (x *ColumnsResponse) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type Column struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DataType      string                 `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Length        int32                  `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
	Type          int32                  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Flag          int32                  `protobuf:"varint,6,opt,name=flag,proto3" json:"flag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column) Reset() {
	*x = Column{}
	mi := &file_machrpc_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{23}
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Column) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Column) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Column) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Column) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

type RowsHandle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handle        string                 `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Conn          *ConnHandle            `protobuf:"bytes,2,opt,name=conn,proto3" json:"conn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowsHandle) Reset() {
	*x = RowsHandle{}
	mi := &file_machrpc_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowsHandle) ProtoMessage() {}

func (x *RowsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowsHandle.ProtoReflect.Descriptor instead.
func (*RowsHandle) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{24}
}

func (x *RowsHandle) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *RowsHandle) GetConn() *ConnHandle {
	if x != nil {
		return x.Conn
	}
	return nil
}

type RowsFetchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	HasNoRows     bool                   `protobuf:"varint,4,opt,name=hasNoRows,proto3" json:"hasNoRows,omitempty"`
	Values        []*anypb.Any           `protobuf:"bytes,5,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowsFetchResponse) Reset() {
	*x = RowsFetchResponse{}
	mi := &file_machrpc_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowsFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowsFetchResponse) ProtoMessage() {}

func (x *RowsFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowsFetchResponse.ProtoReflect.Descriptor instead.
func (*RowsFetchResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{25}
}

func (x *RowsFetchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RowsFetchResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RowsFetchResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

func (x *RowsFetchResponse) GetHasNoRows() bool {
	if x != nil {
		return x.HasNoRows
	}
	return false
}

func (x *RowsFetchResponse) GetValues() []*anypb.Any {
	if x != nil {
		return x.Values
	}
	return nil
}

type RowsCloseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowsCloseResponse) Reset() {
	*x = RowsCloseResponse{}
	mi := &file_machrpc_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowsCloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowsCloseResponse) ProtoMessage() {}

func (x *RowsCloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowsCloseResponse.ProtoReflect.Descriptor instead.
func (*RowsCloseResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{26}
}

func (x *RowsCloseResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RowsCloseResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RowsCloseResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

type UserAuthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LoginName     string                 `protobuf:"bytes,1,opt,name=loginName,proto3" json:"loginName,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserAuthRequest) Reset() {
	*x = UserAuthRequest{}
	mi := &file_machrpc_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthRequest) ProtoMessage() {}

func (x *UserAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthRequest.ProtoReflect.Descriptor instead.
func (*UserAuthRequest) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{27}
}

func (x *UserAuthRequest) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *UserAuthRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserAuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Elapse        string                 `protobuf:"bytes,3,opt,name=elapse,proto3" json:"elapse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserAuthResponse) Reset() {
	*x = UserAuthResponse{}
	mi := &file_machrpc_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthResponse) ProtoMessage() {}

func (x *UserAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machrpc_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthResponse.ProtoReflect.Descriptor instead.
func (*UserAuthResponse) Descriptor() ([]byte, []int) {
	return file_machrpc_proto_rawDescGZIP(), []int{28}
}

func (x *UserAuthResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UserAuthResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UserAuthResponse) GetElapse() string {
	if x != nil {
		return x.Elapse
	}
	return ""
}

var File_machrpc_proto protoreflect.FileDescriptor

const file_machrpc_proto_rawDesc = "" +
	"\n" +
	"\rmachrpc.proto\x12\amachrpc\x1a\x19google/protobuf/any.proto\"$\n" +
	"\n" +
	"ConnHandle\x12\x16\n" +
	"\x06handle\x18\x01 \x01(\tR\x06handle\"=\n" +
	"\vConnRequest\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\x81\x01\n" +
	"\fConnResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\x12'\n" +
	"\x04conn\x18\x04 \x01(\v2\x13.machrpc.ConnHandleR\x04conn\";\n" +
	"\x10ConnCloseRequest\x12'\n" +
	"\x04conn\x18\x01 \x01(\v2\x13.machrpc.ConnHandleR\x04conn\"]\n" +
	"\x11ConnCloseResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\")\n" +
	"\vPingRequest\x12\x14\n" +
	"\x05token\x18\x02 \x01(\x03R\x05tokenJ\x04\b\x01\x10\x02\"n\n" +
	"\fPingResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\x12\x14\n" +
	"\x05token\x18\x04 \x01(\x03R\x05token\"X\n" +
	"\x0fAppenderRequest\x12'\n" +
	"\x04conn\x18\x01 \x01(\v2\x13.machrpc.ConnHandleR\x04conn\x12\x1c\n" +
	"\ttableName\x18\x02 \x01(\tR\ttableName\"\xf4\x01\n" +
	"\x10AppenderResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\x12/\n" +
	"\x06handle\x18\x04 \x01(\v2\x17.machrpc.AppenderHandleR\x06handle\x12\x1c\n" +
	"\ttableName\x18\x05 \x01(\tR\ttableName\x12\x1c\n" +
	"\ttableType\x18\x06 \x01(\x05R\ttableType\x12)\n" +
	"\acolumns\x18\a \x03(\v2\x0f.machrpc.ColumnR\acolumns\"Q\n" +
	"\x0eAppenderHandle\x12\x16\n" +
	"\x06handle\x18\x01 \x01(\tR\x06handle\x12'\n" +
	"\x04conn\x18\x02 \x01(\v2\x13.machrpc.ConnHandleR\x04conn\"n\n" +
	"\n" +
	"AppendData\x12/\n" +
	"\x06handle\x18\x01 \x01(\v2\x17.machrpc.AppenderHandleR\x06handle\x12/\n" +
	"\arecords\x18\x02 \x03(\v2\x15.machrpc.AppendRecordR\arecords\":\n" +
	"\fAppendRecord\x12*\n" +
	"\x05tuple\x18\x01 \x03(\v2\x14.machrpc.AppendDatumR\x05tuple\"\xd6\x02\n" +
	"\vAppendDatum\x12\x19\n" +
	"\av_int32\x18\x01 \x01(\x05H\x00R\x06vInt32\x12\x1b\n" +
	"\bv_uint32\x18\v \x01(\rH\x00R\avUint32\x12\x19\n" +
	"\av_int64\x18\x02 \x01(\x03H\x00R\x06vInt64\x12\x1b\n" +
	"\bv_uint64\x18\f \x01(\x04H\x00R\avUint64\x12\x19\n" +
	"\av_float\x18\x03 \x01(\x02H\x00R\x06vFloat\x12\x1b\n" +
	"\bv_double\x18\x04 \x01(\x01H\x00R\avDouble\x12\x1b\n" +
	"\bv_string\x18\x05 \x01(\tH\x00R\avString\x12\x17\n" +
	"\x06v_bool\x18\x06 \x01(\bH\x00R\x05vBool\x12\x19\n" +
	"\av_bytes\x18\a \x01(\fH\x00R\x06vBytes\x12\x13\n" +
	"\x04v_ip\x18\b \x01(\tH\x00R\x03vIp\x12\x17\n" +
	"\x06v_time\x18\t \x01(\x03H\x00R\x05vTime\x12\x17\n" +
	"\x06v_null\x18\n" +
	" \x01(\bH\x00R\x05vNullB\a\n" +
	"\x05value\"\x98\x01\n" +
	"\n" +
	"AppendDone\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\x12\"\n" +
	"\fsuccessCount\x18\x04 \x01(\x03R\fsuccessCount\x12\x1c\n" +
	"\tfailCount\x18\x05 \x01(\x03R\tfailCount\"_\n" +
	"\x0eExplainRequest\x12'\n" +
	"\x04conn\x18\x01 \x01(\v2\x13.machrpc.ConnHandleR\x04conn\x12\x10\n" +
	"\x03sql\x18\x02 \x01(\tR\x03sql\x12\x12\n" +
	"\x04full\x18\x03 \x01(\bR\x04full\"o\n" +
	"\x0fExplainResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\x12\x12\n" +
	"\x04plan\x18\x04 \x01(\tR\x04plan\"v\n" +
	"\vExecRequest\x12'\n" +
	"\x04conn\x18\x01 \x01(\v2\x13.machrpc.ConnHandleR\x04conn\x12\x10\n" +
	"\x03sql\x18\x02 \x01(\tR\x03sql\x12,\n" +
	"\x06params\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\x06params\"\x82\x01\n" +
	"\fExecResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\x12\"\n" +
	"\frowsAffected\x18\x04 \x01(\x03R\frowsAffectedJ\x04\b\x05\x10\x06\"z\n" +
	"\x0fQueryRowRequest\x12'\n" +
	"\x04conn\x18\x01 \x01(\v2\x13.machrpc.ConnHandleR\x04conn\x12\x10\n" +
	"\x03sql\x18\x02 \x01(\tR\x03sql\x12,\n" +
	"\x06params\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\x06params\"\xdf\x01\n" +
	"\x10QueryRowResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\x12,\n" +
	"\x06values\x18\x04 \x03(\v2\x14.google.protobuf.AnyR\x06values\x12\"\n" +
	"\frowsAffected\x18\x05 \x01(\x03R\frowsAffected\x12)\n" +
	"\acolumns\x18\a \x03(\v2\x0f.machrpc.ColumnR\acolumnsJ\x04\b\x06\x10\a\"w\n" +
	"\fQueryRequest\x12'\n" +
	"\x04conn\x18\x01 \x01(\v2\x13.machrpc.ConnHandleR\x04conn\x12\x10\n" +
	"\x03sql\x18\x02 \x01(\tR\x03sql\x12,\n" +
	"\x06params\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\x06params\"\xb2\x01\n" +
	"\rQueryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\x123\n" +
	"\n" +
	"rowsHandle\x18\x04 \x01(\v2\x13.machrpc.RowsHandleR\n" +
	"rowsHandle\x12\"\n" +
	"\frowsAffected\x18\x05 \x01(\x03R\frowsAffected\"\x86\x01\n" +
	"\x0fColumnsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\x12)\n" +
	"\acolumns\x18\x04 \x03(\v2\x0f.machrpc.ColumnR\acolumns\"~\n" +
	"\x06Column\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bdataType\x18\x02 \x01(\tR\bdataType\x12\x16\n" +
	"\x06length\x18\x04 \x01(\x05R\x06length\x12\x12\n" +
	"\x04type\x18\x05 \x01(\x05R\x04type\x12\x12\n" +
	"\x04flag\x18\x06 \x01(\x05R\x04flagJ\x04\b\x03\x10\x04\"M\n" +
	"\n" +
	"RowsHandle\x12\x16\n" +
	"\x06handle\x18\x01 \x01(\tR\x06handle\x12'\n" +
	"\x04conn\x18\x02 \x01(\v2\x13.machrpc.ConnHandleR\x04conn\"\xa9\x01\n" +
	"\x11RowsFetchResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\x12\x1c\n" +
	"\thasNoRows\x18\x04 \x01(\bR\thasNoRows\x12,\n" +
	"\x06values\x18\x05 \x03(\v2\x14.google.protobuf.AnyR\x06values\"]\n" +
	"\x11RowsCloseResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse\"K\n" +
	"\x0fUserAuthRequest\x12\x1c\n" +
	"\tloginName\x18\x01 \x01(\tR\tloginName\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\\\n" +
	"\x10UserAuthResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x16\n" +
	"\x06elapse\x18\x03 \x01(\tR\x06elapse2\xac\x06\n" +
	"\bMachbase\x125\n" +
	"\x04Conn\x12\x14.machrpc.ConnRequest\x1a\x15.machrpc.ConnResponse\"\x00\x12D\n" +
	"\tConnClose\x12\x19.machrpc.ConnCloseRequest\x1a\x1a.machrpc.ConnCloseResponse\"\x00\x125\n" +
	"\x04Ping\x12\x14.machrpc.PingRequest\x1a\x15.machrpc.PingResponse\"\x00\x125\n" +
	"\x04Exec\x12\x14.machrpc.ExecRequest\x1a\x15.machrpc.ExecResponse\"\x00\x12A\n" +
	"\bQueryRow\x12\x18.machrpc.QueryRowRequest\x1a\x19.machrpc.QueryRowResponse\"\x00\x128\n" +
	"\x05Query\x12\x15.machrpc.QueryRequest\x1a\x16.machrpc.QueryResponse\"\x00\x12:\n" +
	"\aColumns\x12\x13.machrpc.RowsHandle\x1a\x18.machrpc.ColumnsResponse\"\x00\x12>\n" +
	"\tRowsFetch\x12\x13.machrpc.RowsHandle\x1a\x1a.machrpc.RowsFetchResponse\"\x00\x12>\n" +
	"\tRowsClose\x12\x13.machrpc.RowsHandle\x1a\x1a.machrpc.RowsCloseResponse\"\x00\x12A\n" +
	"\bAppender\x12\x18.machrpc.AppenderRequest\x1a\x19.machrpc.AppenderResponse\"\x00\x126\n" +
	"\x06Append\x12\x13.machrpc.AppendData\x1a\x13.machrpc.AppendDone\"\x00(\x01\x12>\n" +
	"\aExplain\x12\x17.machrpc.ExplainRequest\x1a\x18.machrpc.ExplainResponse\"\x00\x12A\n" +
	"\bUserAuth\x12\x18.machrpc.UserAuthRequest\x1a\x19.machrpc.UserAuthResponse\"\x00B&Z$github.com/machbase/neo-grpc/machrpcb\x06proto3"

var (
	file_machrpc_proto_rawDescOnce sync.Once
	file_machrpc_proto_rawDescData []byte
)

func file_machrpc_proto_rawDescGZIP() []byte {
	file_machrpc_proto_rawDescOnce.Do(func() {
		file_machrpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_machrpc_proto_rawDesc), len(file_machrpc_proto_rawDesc)))
	})
	return file_machrpc_proto_rawDescData
}

var file_machrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_machrpc_proto_goTypes = []any{
	(*ConnHandle)(nil),        // 0: machrpc.ConnHandle
	(*ConnRequest)(nil),       // 1: machrpc.ConnRequest
	(*ConnResponse)(nil),      // 2: machrpc.ConnResponse
	(*ConnCloseRequest)(nil),  // 3: machrpc.ConnCloseRequest
	(*ConnCloseResponse)(nil), // 4: machrpc.ConnCloseResponse
	(*PingRequest)(nil),       // 5: machrpc.PingRequest
	(*PingResponse)(nil),      // 6: machrpc.PingResponse
	(*AppenderRequest)(nil),   // 7: machrpc.AppenderRequest
	(*AppenderResponse)(nil),  // 8: machrpc.AppenderResponse
	(*AppenderHandle)(nil),    // 9: machrpc.AppenderHandle
	(*AppendData)(nil),        // 10: machrpc.AppendData
	(*AppendRecord)(nil),      // 11: machrpc.AppendRecord
	(*AppendDatum)(nil),       // 12: machrpc.AppendDatum
	(*AppendDone)(nil),        // 13: machrpc.AppendDone
	(*ExplainRequest)(nil),    // 14: machrpc.ExplainRequest
	(*ExplainResponse)(nil),   // 15: machrpc.ExplainResponse
	(*ExecRequest)(nil),       // 16: machrpc.ExecRequest
	(*ExecResponse)(nil),      // 17: machrpc.ExecResponse
	(*QueryRowRequest)(nil),   // 18: machrpc.QueryRowRequest
	(*QueryRowResponse)(nil),  // 19: machrpc.QueryRowResponse
	(*QueryRequest)(nil),      // 20: machrpc.QueryRequest
	(*QueryResponse)(nil),     // 21: machrpc.QueryResponse
	(*ColumnsResponse)(nil),   // 22: machrpc.ColumnsResponse
	(*Column)(nil),            // 23: machrpc.Column
	(*RowsHandle)(nil),        // 24: machrpc.RowsHandle
	(*RowsFetchResponse)(nil), // 25: machrpc.RowsFetchResponse
	(*RowsCloseResponse)(nil), // 26: machrpc.RowsCloseResponse
	(*UserAuthRequest)(nil),   // 27: machrpc.UserAuthRequest
	(*UserAuthResponse)(nil),  // 28: machrpc.UserAuthResponse
	(*anypb.Any)(nil),         // 29: google.protobuf.Any
}
var file_machrpc_proto_depIdxs = []int32{
	0,  // 0: machrpc.ConnResponse.conn:type_name -> machrpc.ConnHandle
	0,  // 1: machrpc.ConnCloseRequest.conn:type_name -> machrpc.ConnHandle
	0,  // 2: machrpc.AppenderRequest.conn:type_name -> machrpc.ConnHandle
	9,  // 3: machrpc.AppenderResponse.handle:type_name -> machrpc.AppenderHandle
	23, // 4: machrpc.AppenderResponse.columns:type_name -> machrpc.Column
	0,  // 5: machrpc.AppenderHandle.conn:type_name -> machrpc.ConnHandle
	9,  // 6: machrpc.AppendData.handle:type_name -> machrpc.AppenderHandle
	11, // 7: machrpc.AppendData.records:type_name -> machrpc.AppendRecord
	12, // 8: machrpc.AppendRecord.tuple:type_name -> machrpc.AppendDatum
	0,  // 9: machrpc.ExplainRequest.conn:type_name -> machrpc.ConnHandle
	0,  // 10: machrpc.ExecRequest.conn:type_name -> machrpc.ConnHandle
	29, // 11: machrpc.ExecRequest.params:type_name -> google.protobuf.Any
	0,  // 12: machrpc.QueryRowRequest.conn:type_name -> machrpc.ConnHandle
	29, // 13: machrpc.QueryRowRequest.params:type_name -> google.protobuf.Any
	29, // 14: machrpc.QueryRowResponse.values:type_name -> google.protobuf.Any
	23, // 15: machrpc.QueryRowResponse.columns:type_name -> machrpc.Column
	0,  // 16: machrpc.QueryRequest.conn:type_name -> machrpc.ConnHandle
	29, // 17: machrpc.QueryRequest.params:type_name -> google.protobuf.Any
	24, // 18: machrpc.QueryResponse.rowsHandle:type_name -> machrpc.RowsHandle
	23, // 19: machrpc.ColumnsResponse.columns:type_name -> machrpc.Column
	0,  // 20: machrpc.RowsHandle.conn:type_name -> machrpc.ConnHandle
	29, // 21: machrpc.RowsFetchResponse.values:type_name -> google.protobuf.Any
	1,  // 22: machrpc.Machbase.Conn:input_type -> machrpc.ConnRequest
	3,  // 23: machrpc.Machbase.ConnClose:input_type -> machrpc.ConnCloseRequest
	5,  // 24: machrpc.Machbase.Ping:input_type -> machrpc.PingRequest
	16, // 25: machrpc.Machbase.Exec:input_type -> machrpc.ExecRequest
	18, // 26: machrpc.Machbase.QueryRow:input_type -> machrpc.QueryRowRequest
	20, // 27: machrpc.Machbase.Query:input_type -> machrpc.QueryRequest
	24, // 28: machrpc.Machbase.Columns:input_type -> machrpc.RowsHandle
	24, // 29: machrpc.Machbase.RowsFetch:input_type -> machrpc.RowsHandle
	24, // 30: machrpc.Machbase.RowsClose:input_type -> machrpc.RowsHandle
	7,  // 31: machrpc.Machbase.Appender:input_type -> machrpc.AppenderRequest
	10, // 32: machrpc.Machbase.Append:input_type -> machrpc.AppendData
	14, // 33: machrpc.Machbase.Explain:input_type -> machrpc.ExplainRequest
	27, // 34: machrpc.Machbase.UserAuth:input_type -> machrpc.UserAuthRequest
	2,  // 35: machrpc.Machbase.Conn:output_type -> machrpc.ConnResponse
	4,  // 36: machrpc.Machbase.ConnClose:output_type -> machrpc.ConnCloseResponse
	6,  // 37: machrpc.Machbase.Ping:output_type -> machrpc.PingResponse
	17, // 38: machrpc.Machbase.Exec:output_type -> machrpc.ExecResponse
	19, // 39: machrpc.Machbase.QueryRow:output_type -> machrpc.QueryRowResponse
	21, // 40: machrpc.Machbase.Query:output_type -> machrpc.QueryResponse
	22, // 41: machrpc.Machbase.Columns:output_type -> machrpc.ColumnsResponse
	25, // 42: machrpc.Machbase.RowsFetch:output_type -> machrpc.RowsFetchResponse
	26, // 43: machrpc.Machbase.RowsClose:output_type -> machrpc.RowsCloseResponse
	8,  // 44: machrpc.Machbase.Appender:output_type -> machrpc.AppenderResponse
	13, // 45: machrpc.Machbase.Append:output_type -> machrpc.AppendDone
	15, // 46: machrpc.Machbase.Explain:output_type -> machrpc.ExplainResponse
	28, // 47: machrpc.Machbase.UserAuth:output_type -> machrpc.UserAuthResponse
	35, // [35:48] is the sub-list for method output_type
	22, // [22:35] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_machrpc_proto_init() }
func file_machrpc_proto_init() {
	if File_machrpc_proto != nil {
		return
	}
	file_machrpc_proto_msgTypes[12].OneofWrappers = []any{
		(*AppendDatum_VInt32)(nil),
		(*AppendDatum_VUint32)(nil),
		(*AppendDatum_VInt64)(nil),
		(*AppendDatum_VUint64)(nil),
		(*AppendDatum_VFloat)(nil),
		(*AppendDatum_VDouble)(nil),
		(*AppendDatum_VString)(nil),
		(*AppendDatum_VBool)(nil),
		(*AppendDatum_VBytes)(nil),
		(*AppendDatum_VIp)(nil),
		(*AppendDatum_VTime)(nil),
		(*AppendDatum_VNull)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_machrpc_proto_rawDesc), len(file_machrpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_machrpc_proto_goTypes,
		DependencyIndexes: file_machrpc_proto_depIdxs,
		MessageInfos:      file_machrpc_proto_msgTypes,
	}.Build()
	File_machrpc_proto = out.File
	file_machrpc_proto_goTypes = nil
	file_machrpc_proto_depIdxs = nil
}
