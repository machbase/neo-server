name: CI-Docker

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  build:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go compiler
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: false
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker version
        run: docker -v
      - name: Get Next Version
        id: get_version
        run: echo "ver=$(go run mage.go buildversion)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Check if stable version
        id: check_stable
        run: |
          VERSION="${{ steps.get_version.outputs.ver }}"
          if [[ "$VERSION" != *"snapshot"* && "$VERSION" != *"rc"* ]]; then
            echo "is_stable=true" >> $GITHUB_OUTPUT
            echo "version_tag=machbase/machbase-neo:$VERSION" >> $GITHUB_OUTPUT
            echo "latest_tag=machbase/machbase-neo:latest" >> $GITHUB_OUTPUT
            echo "This is a stable version: $VERSION - will tag as latest"
          else
            echo "is_stable=false" >> $GITHUB_OUTPUT
            echo "version_tag=machbase/machbase-neo:$VERSION" >> $GITHUB_OUTPUT
            echo "latest_tag=" >> $GITHUB_OUTPUT
            echo "This is a pre-release version: $VERSION - will not tag as latest"
          fi
        shell: bash
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Build and Push
        shell: bash
        run: |
          if [[ "${{ steps.check_stable.outputs.is_stable }}" == "true" ]]; then
            docker buildx build --push \
            --platform linux/arm64,linux/amd64 \
            --tag ${{ steps.check_stable.outputs.version_tag }} \
            --tag ${{ steps.check_stable.outputs.latest_tag }} \
            -f ./scripts/machbase-neo.Dockerfile \
            .
          else
            docker buildx build --push \
            --platform linux/arm64,linux/amd64 \
            --tag ${{ steps.check_stable.outputs.version_tag }} \
            -f ./scripts/machbase-neo.Dockerfile \
            .
          fi
