name: Releases

on:
  push:
    tags:
      - v*

jobs:
    darwin:
        strategy:
          matrix:
            platform: [macos-14, macos-13] # macos-14 is M1
        runs-on: ${{ matrix.platform }}
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: Setup go compiler
            uses: actions/setup-go@v5
            with:
              go-version-file: 'go.mod'
              check-latest: false
          - name: Install Neo Web and Launcher
            run: go run mage.go InstallNeoWeb InstallNeoLauncher
          - name: Build
            run: go run mage.go test machbase-neo
          - name: Sign and notarize the release build
            uses: toitlang/action-macos-sign-notarize@v1.2.0
            with:
              certificate: ${{ secrets.CODESIGN_DARWIN_CERTIFICATE }}
              certificate-password: ${{ secrets.CODESIGN_DARWIN_PASS }}
              username: ${{ secrets.CODESIGN_DARWIN_APPLE_ID_USERNAME }}
              password: ${{ secrets.CODESIGN_DARWIN_APPLE_ID_PASS }}
              apple-team-id: ${{ secrets.CODESIGN_DARWIN_APPLE_TEAM_ID }}
              app-path: |-
                ./tmp/machbase-neo
          - name: Package
            run: go run mage.go package
          - name: Release files
            uses: svenstaro/upload-release-action@v2
            if: startsWith(github.ref, 'refs/tags/v')
            with:
              repo_token: ${{ secrets.GIT_PASS }}
              file: packages/machbase-neo-v*.zip
              repo_name: machbase/neo-server
              prerelease: true
              tag: ${{ github.ref }}
              overwrite: true
              file_glob: true
    linux:
        strategy:
          matrix:
            arch: [ arm64, x64 ]
        runs-on: [ self-hosted, linux, '${{ matrix.arch }}', ubuntu20 ]
        env:
          ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: Setup go compiler
            uses: actions/setup-go@v5
            with:
              go-version-file: 'go.mod'
              check-latest: false
              cache: false # !!! do not cache for self-hosted runner, for github hosted runner --> remove this setting
          - name: Install Neo Web
            run: go run mage.go InstallNeoWeb
          - name: Build
            run: go run mage.go test machbase-neo package
          - name: Release files
            uses: svenstaro/upload-release-action@2.7.0
            if: startsWith(github.ref, 'refs/tags/v')
            with:
              repo_token: ${{ secrets.GIT_PASS }}
              file: packages/machbase-neo-v*.zip
              repo_name: machbase/neo-server
              prerelease: true
              tag: ${{ github.ref }}
              overwrite: true
              file_glob: true
    linux-arm32:
        runs-on: [ ubuntu-20.04 ]
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: Setup go compiler
            uses: actions/setup-go@v5
            with:
              go-version-file: 'go.mod'
              check-latest: false    
          - name: Install Neo Web
            run: go run mage.go InstallNeoWeb
          - uses: goto-bus-stop/setup-zig@v2
            with:
              version: 0.11.0
          - name: Build
            run: go run mage.go buildx machbase-neo linux arm packagex linux arm
          - name: Release files
            uses: svenstaro/upload-release-action@v2
            if: startsWith(github.ref, 'refs/tags/v')
            with:
              repo_token: ${{ secrets.GIT_PASS }}
              file: packages/machbase-neo-v*.zip
              repo_name: machbase/neo-server
              prerelease: true
              tag: ${{ github.ref }}
              overwrite: true
              file_glob: true
    windows-amd64:
        runs-on: [ windows-2019 ]
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: Setup MinGW64
            uses: msys2/setup-msys2@v2
            with:
              msystem: mingw64
              install: >-
                mingw-w64-x86_64-gcc
          - name: Setup go compiler
            uses: actions/setup-go@v5
            with:
              go-version-file: 'go.mod'
              check-latest: false
              cache: false # do not cache for self-hosted runner
          - name: Build-Mage
            run: go run mage.go -compile ./tmp/mage_output.exe
          - name: Build
            run: magefiles\tmp\mage_output.exe InstallNeoWeb InstallNeoLauncher test machbase-neo
            shell: cmd
          - name: Codesign
            uses: dlemstra/code-sign-action@v1
            with:
              certificate: '${{ secrets.CODESIGN_WIN_CERTIFICATE }}' 
              password: '${{ secrets.CODESIGN_WIN_PASS }}'
              folder: './tmp'
              recursive: false
              files: |
                machbase-neo.exe
          - name: Package
            run: magefiles\tmp\mage_output.exe package
            shell: cmd
          - name: Release files
            uses: svenstaro/upload-release-action@v2
            if: startsWith(github.ref, 'refs/tags/v')
            with:
              repo_token: ${{ secrets.GIT_PASS }}
              file: packages/machbase-neo-v*.zip
              repo_name: machbase/neo-server
              prerelease: true
              tag: ${{ github.ref }}
              overwrite: true
              file_glob: true
    docker-arm64:
      runs-on: [ self-hosted, linux, ARM64, ubuntu20 ]
      env:
        ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      needs: [ linux ]
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up go compiler
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
            check-latest: false
            cache: false # do not cache for self-hosted runner
        - name: Install Neo Web
          run: go run mage.go InstallNeoWeb
        - name: Package for arm64
          run: |
            go run mage.go machbase-neo && \
            scp tmp/machbase-neo ${{ secrets.DOCKER_HOST }}:/home/ubuntu/docker-build/arm64/
    docker-amd64:
      runs-on: [ self-hosted, linux, X64, ubuntu20 ]
      env:
        ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      needs: [ docker-arm64 ]
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up go compiler
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
            check-latest: false
            cache: false # do not cache for self-hosted runner
        - name: Install Neo Web
          run: go run mage.go InstallNeoWeb
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Docker version
          run: docker -v
        - name: Get Next Version
          id: get_version
          run: echo "ver=$(go run mage.go buildversion)" >> $GITHUB_OUTPUT
          shell: bash
        - name: Package for amd64
          run: |
            go run mage.go machbase-neo && \
            mv tmp/machbase-neo /home/ubuntu/docker-build/amd64/
        - name: Docker Login
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Docker Build and Push (Latest)
          uses: docker/build-push-action@v4
          if: (!contains(github.ref, 'snapshot') && !contains(github.ref, 'rc'))
          with:
            context: /home/ubuntu/docker-build
            file: ./scripts/Dockerfile
            platforms: linux/arm64,linux/amd64
            push: true
            tags: |
              machbase/machbase-neo:${{ steps.get_version.outputs.ver }}
              machbase/machbase-neo:latest
        - name: Docker Build and Push (Snapshot)
          uses: docker/build-push-action@v4
          if: (contains(github.ref, 'snapshot') || contains(github.ref, 'rc'))
          with:
            context: /home/ubuntu/docker-build
            file: ./scripts/Dockerfile
            platforms: linux/arm64,linux/amd64
            push: true
            tags: |
              machbase/machbase-neo:${{ steps.get_version.outputs.ver }}
      