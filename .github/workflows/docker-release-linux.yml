name: Docker Release for Linux

on:
  push:
    tags:
      - v*

jobs:
  arm64:
    runs-on: [ self-hosted, linux, ARM64, ubuntu18 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up go compiler
        uses: actions/setup-go@v3
        with:
          go-version: '1.20.7'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker version
        run: docker -v

      - name: Get Next Version
        id: get_version
        run: echo "ver=$(./scripts/buildversion.sh)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create Directory
        run: |
          mkdir output/

      - name: Package for arm64
        run: |
          make cleanpackage && \
          ./scripts/package.sh machbase-neo linux arm64 ${{ steps.get_version.outputs.ver }} && \
          unzip packages/machbase-neo-v*.zip && \
          mv machbase-neo-v*/machbase-neo ./output/

      - name: Docker Login
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build and Push
        uses: docker/build-push-action@v4
        with:
            context: ./output
            file: ./scripts/Dockerfile
            platforms: linux/arm64
            push: true
            tags: |
              machbase/machbase-neo:${{ steps.get_version.outputs.ver }}-linux-arm64

  amd64:
    runs-on: [ self-hosted, linux, X64, ubuntu18 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up go compiler
        uses: actions/setup-go@v3
        with:
          go-version: '1.20.7'
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Docker version
        run: docker -v

      - name: Get Next Version
        id: get_version
        run: echo "ver=$(./scripts/buildversion.sh)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create Directory
        run: |
          mkdir output/

      - name: Package for amd64
        run: |
          make cleanpackage && \
          ./scripts/package.sh machbase-neo linux amd64 ${{ steps.get_version.outputs.ver }} && \
          unzip packages/machbase-neo-v*.zip && \
          mv machbase-neo-v*/machbase-neo ./output/

      - name: Docker Login
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Docker Build and Push
        uses: docker/build-push-action@v4
        with:
            context: ./output
            file: ./scripts/Dockerfile
            platforms: linux/amd64
            push: true
            tags: |
              machbase/machbase-neo:${{ steps.get_version.outputs.ver }}-linux-amd64
            
  manifest:
    needs: [ arm64, amd64 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Next Version
        id: get_version
        run: echo "ver=$(./scripts/buildversion.sh)" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
       
      - uses: int128/docker-manifest-create-action@v1
        with:
          tags: machbase/machbase-neo:${{ steps.get_version.outputs.ver }}
          suffixes: |
            -linux-amd64
            -linux-arm64

