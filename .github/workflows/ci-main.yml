name: CI

on:
  push:
    branches:
      - 'main'
      - 'dev-*'  

jobs:
  darwin:
    strategy:
      matrix:
        include:
          - { platform: macos-14, arch: arm64, os: macos }
          - { platform: macos-13, arch: x64, os: macos }
          - { platform: windows-2019, arch: x64, os: windows }
          - { platform: ubuntu-20.04, arch: arm32, os: linux }
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup MinGW64
        if: matrix.os == 'windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: >-
            mingw-w64-x86_64-gcc
      - name: Setup go compiler
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: false
          cache: false
      - name: Setup zig
        if: matrix.os == 'linux' && matrix.arch == 'arm32'
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.11.0
      - name: Install Neo Web
        run: go run mage.go InstallNeoWeb
      - name: Install Neo Launcher
        if: matrix.os == 'macos' || matrix.os == 'windows'
        run: go run mage.go InstallNeoLauncher
      - name: Build
        if: matrix.arch != 'arm32'
        run: go run mage.go test machbase-neo
      - name: Build arm32
        if: matrix.os == 'linux' && matrix.arch == 'arm32'
        run: go run mage.go buildx machbase-neo linux arm packagex linux arm
      - name: Codecov
        if: matrix.os == 'linux' && matrix.arch == 'x64'
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Codesign and notarize macos app
        if: matrix.os == 'macos'
        uses: toitlang/action-macos-sign-notarize@v1.2.0
        with:
          certificate: ${{ secrets.CODESIGN_DARWIN_CERTIFICATE }}
          certificate-password: ${{ secrets.CODESIGN_DARWIN_PASS }}
          username: ${{ secrets.CODESIGN_DARWIN_APPLE_ID_USERNAME }}
          password: ${{ secrets.CODESIGN_DARWIN_APPLE_ID_PASS }}
          apple-team-id: ${{ secrets.CODESIGN_DARWIN_APPLE_TEAM_ID }}
          app-path: |-
            ./tmp/machbase-neo
      - name: Codesign windows app
        if: matrix.os == 'windows'
        uses: dlemstra/code-sign-action@v1
        with:
          certificate: '${{ secrets.CODESIGN_WIN_CERTIFICATE }}' 
          password: '${{ secrets.CODESIGN_WIN_PASS }}'
          folder: './tmp'
          recursive: false
          files: |
            machbase-neo.exe
      - name: Package
        if: matrix.arch != 'arm32'
        run: go run mage.go package
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: machbase-neo-snapshot-${{ matrix.os }}-${{ matrix.arch }}
          retention-days: 5
          path: packages/machbase-neo-v*.zip
  linux:
    strategy:
      matrix:
        arch: [ arm64, x64 ]
    runs-on: [ self-hosted, linux, '${{ matrix.arch }}', ubuntu20 ]
    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go compiler
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: false
          cache: false # !!! do not cache for self-hosted runner
      - name: Install Neo Web
        run: go run mage.go InstallNeoWeb
      - name: Build
        run: go run mage.go test machbase-neo
      - name: Codecov
        if: matrix.arch == 'x64'
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Package
        run: go run mage.go package
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: machbase-neo-snapshot-linux-${{ matrix.arch }}
          retention-days: 5
          path: packages/machbase-neo-v*.zip
