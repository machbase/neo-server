{"data":[{"id":"1693284926622699","contents":"# Raspberry PI as IoT server\n\nThis tutorial covers a demonstration of installing machbase-neo on Raspberry PI, collecting and retrieving sensor data.\n\n## Connect DHT11 to Raspberry PI\n\nBefore you connect DHT11 sensor into Raspberry PI's gpio, turn off Raspberry PI first.\n\n<!--![gpio](../assets/tutorials/img/raspi4-gpio.jpg)-->\n\nDHT11 has 3 leads - VCC, DAT, GND connect each lead to gpio 2, 3, 6.\n\n<!--![dht11](../assets/tutorials/img/dht11.png)-->\n\n\n\n## Read sensor data\n\n- Raspberry PI 4 model B (4GB Mem in this tutorial)\n- Adafruit_DHT 11 (sensor)\n\nInstall `Adafruit_DHT` python module for accessing sensor data.\n\n```sh\npip3 install Adafruit_DHT\n```\n\nThe code reads data from the GPIO 2 pin (`pinnum = 2`), which is connected to the DATA lead of the DHT11 sensor.\nIt outputs the data in the form of \"name, timestamp, value\" to the standard output in every second.\nTo ensure that machbase-neo can handle the time with nano-second precision,\nthe sample code sets the timestamp using multiplication by 1000000000.\n\n```py\nimport Adafruit_DHT\nfrom time import time\nfrom time import sleep\n\npinnum = 2\nsensor = Adafruit_DHT.DHT11\nwhile (True):\n    hum, temp = Adafruit_DHT.read_retry(sensor,pinnum)\n    ts_ns = int(time() * 1000000000)\n    if hum is not None and temp is not None:\n        print(f'temperature,{ts_ns},{temp}')\n        print(f'humidity,{ts_ns},{hum}')\n        sleep(1)\n```\n\nSave this code as `dht.py` and execute dry-run.\n\n```sh\n$ python dht.py\ntemperature,1676008535430951936,28.0\nhumidity,1676008535430951936,33.0\ntemperature,1676008536956561152,28.0\nhumidity,1676008536956561152,33.0\ntemperature,1676008538482078464,28.0\nhumidity,1676008538482078464,33.0\ntemperature,1676008540007633664,28.0\nhumidity,1676008540007633664,33.0\n^C\n```\n\n## Install machbase-neo\n\n- Connect to PI via SSH or console\n\n```\n$ ssh -l pi <ip address>\n```\n\n- Make `demo` directory\n\n```sh\nmkdir demo && cd demo\n```\n\n- Download machbase-neo\n\n```sh\nsh -c \"$(curl -fsSL https://neo.machbase.com/install.sh)\"\n```\n\n- Unarchive zip file\n\n```sh\n$ unzip machbase-neo-{{ site.latest_version }}-linux-arm64.zip\n$ cd machbase-neo-{{ site.latest_version }}-linux-arm64\n```\n\n- Start machbase-neo\n\n```sh\n./machbase-neo serve\n```\n\n<!--![img](../assets/tutorials/img/raspi-install.gif)-->\n\n\nPress `Ctrl+C` to shutdown machbase-neo.\n\n## Setup machbase-neo's network\n\n### Bind ip address for accessing out side of Raspberry PI\n\nAs machbase-neo's boot message shows, it is listening only localhost(`127.0.0.1`).\nIf you are going to access machbase-neo remotely (e.g via HTTP) from your laptop and other application server,\nIt is required to bind host ip address with `--host <bind_ip_addr>` option.\n\n```sh\n./machbase-neo serve --host 0.0.0.0\n```\n\n## Storing data\n\n### Create table `example`\n\nWhile `machbase-neo serve` is running, create `example` table by the shell command below.\n\n```\n./machbase-neo shell \"create tag table if not exists EXAMPLE (name varchar(100) primary key, time datetime basetime, value double)\"\n```\n\n### Write data into machbase-neo\n\nExecute `dht.py` and redirect its output to `machabse-neo shell import`.\nImport command accepts csv format by default and keep writing incoming line by line to the specified table (here `example`) until it reaches to the EOF.\n\n```sh\npython dht.py | ./machbase-neo shell import example\n```\n\nSince we redirect python's standard output into `machbase-neo shell import` command by pipe `|`, there will be no output message.\n\n## Read data from machbase-neo\n\n### Read recently written data\n\nWhile running wrting process, open another terminal and run sql the check the recently written data.\n\nThe option `--tz local` is for displaying TIME field in local time zone instead of UTC.\n\n```\n./machbase-neo shell walk --tz local 'select * from example order by time desc'\n```\n\nPress `r` key to re-execute query to refresh new data.\n\n<!--![walk](../assets/tutorials/img/raspi-walk.gif)-->\n\n\n### Read data from application\n\nSince machbase-neo provides HTTP API for application to the query stored data, it is easy requesting HTTP query data with SQL like below.\n\n```py\nfrom urllib import parse\nimport pandas as pd\nquery_param = parse.urlencode({\n    \"q\":\"select * from example order by time limit 500\",\n    \"format\": \"csv\",\n})\ndf = pd.read_csv(f\"http://192.168.1.214:5654/db/query?{query_param}\")\ndf\n```\n\n<!--![query](../assets/tutorials/img/raspi-query.jpg)-->\n\n","height":389,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true}]}