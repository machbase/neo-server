{"data":[{"id":"1693189544383476","contents":"# Query Parameters in TQL\n\n> For smooth practice, the following query should be run to prepare tables and data.\n","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693189556038974","contents":"CREATE TAG TABLE EXAMPLE (NAME VARCHAR(20) PRIMARY KEY, TIME DATETIME BASETIME, VALUE DOUBLE SUMMARIZED);\nINSERT INTO EXAMPLE VALUES('temperature', TO_DATE('2021-08-12'), 10);\nINSERT INTO EXAMPLE VALUES('temperature', TO_DATE('2021-08-12'), 20);\nINSERT INTO EXAMPLE VALUES('temperature', TO_DATE('2021-08-12'), 30);\nINSERT INTO EXAMPLE VALUES('temperature', TO_DATE('2021-08-12'), 40);\nINSERT INTO EXAMPLE VALUES('temperature', TO_DATE('2021-08-12'), 50);","height":200,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693189555826145","contents":"When other applications call a .tql script via HTTP it can supply variables as query parameters.\n\nThe variables from query params start with '$' sign in a script as below example.\n","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693189555660827","contents":"## Query Parameter\n\nIf the script saved as `hello2.tql`, applications can call the script by HTTP GET method with `http://127.0.0.1:5654/db/tql/hello2.tql?name=temperature&count=10`","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693189553547167","contents":"QUERY(\n    'value',\n    from('example', param('name')),\n    limit( param('count') )\n)\nCSV()","height":200,"minimal":false,"type":"tql","tqlType":"csv","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693189770787173","contents":"## ?? Operator\n\n`??` operator takes left and right operand. if left operand is defined it returns value of it, if left operand is not defined it returns right operand instead.\nThe example below shows the common use case of the `??` operator. If caller did not provide query param variables, the right side operand will be taken as a default value.","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693189740392827","contents":"QUERY(\n    'value',\n    from('example', param('name') ?? 'temperature'),\n    limit( param('count') ?? 10 )\n)\nCSV()","height":200,"minimal":false,"type":"tql","tqlType":"text","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true}]}