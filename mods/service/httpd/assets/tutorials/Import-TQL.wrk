{"data":[{"id":"1693278756083310","contents":"# Import data via TQL\n\n> For smooth practice, the following query should be run to prepare tables and data.","height":84,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"169327878633031","contents":"CREATE TAG TABLE IF NOT EXISTS EXAMPLE (NAME VARCHAR(20) PRIMARY KEY, TIME DATETIME BASETIME, VALUE DOUBLE SUMMARIZED);","height":52,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693278779794752","contents":"Convert any file to TQL and enter it into the table.\n\n## Import Text\n\nMake test data in `import-data.csv`.\n\n```\n1,100,value,10\n2,200,value,11\n3,140,value,12\n```\n\nCopy the code below into TQL editor and save `import-tql-csv.tql`.","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693278804091509","contents":"STRING(payload() ?? `1,100,value,10\n2,200,value,11\n3,140,value,12`, separator('\\n'))\n\nSCRIPT({\n    text := import(\"text\")\n    ctx := import(\"context\")\n\n    key := ctx.key()\n    values := ctx.value()\n    str :=  text.trim_space(values[0])\n\n    str = text.split(str, ',')\n\n    ctx.yieldKey(\n        \"tag-\" + str[0],\n        text.parse_int(str[1], 10, 64),\n        text.parse_int(str[3], 10, 64)\n    )\n})\nAPPEND(table(\"example\"))","height":432,"minimal":false,"type":"tql","tqlType":"text","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693278803934289","contents":"Post the test data CSV to the tql.\n\n```sh\ncurl -o - --data-binary @import-data.csv http://127.0.0.1:5654/db/tql/import-tql-csv.tql\n\nappend 3 rows (success 3, fail 0).\n```\n\nSelect data\n\n```sh\nmachbase-neo shell \"select * from example\";\n\n ROWNUM  NAME   TIME(LOCAL)          VALUE \n───────────────────────────────────────────\n      1  tag-1  1970-01-01 09:00:00  10    \n      2  tag-2  1970-01-01 09:00:00  11    \n      3  tag-3  1970-01-01 09:00:00  12    \n3 rows fetched.\n```","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693278791095974","contents":"## Import JSON\n\nPrepare test data saved in `import-data.json`.\n\n```json\n{\n  \"tag\": \"pump\",\n  \"data\": {\n    \"string\": \"Hello TQL?\",\n    \"number\": \"123.456\",\n    \"time\": 1687405320,\n    \"boolean\": true\n  },\n  \"array\": [\"elements\", 234.567, 345.678, false]\n}\n```\n\nCopy the code below into TQL editor and save `import-tql-json.tql`.","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693278851266835","contents":"BYTES(payload())\nSCRIPT({\n  json := import(\"json\")\n  ctx := import(\"context\")\n  val := ctx.value()\n  obj := json.decode(val[0])\n  // parse a value from json, yield multiple records\n  ctx.yieldKey(obj.tag+\"_0\", obj.data.time*1000000000, obj.data.number)\n  ctx.yieldKey(obj.tag+\"_1\", obj.data.time*1000000000, obj.array[1])\n  ctx.yieldKey(obj.tag+\"_2\", obj.data.time*1000000000, obj.array[2])\n})\nAPPEND(table(\"example\"))","height":262,"minimal":false,"type":"tql","tqlType":"text","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693278841676604","contents":"Post the test data JSON to the tql.\n\n```sh\ncurl -o - --data-binary @import-data.json http://127.0.0.1:5654/db/tql/import-tql-json.tql\n\nappend 2 rows (success 2, fail 0).\n```\n\nSelect data\n\n```sh\nmachbase-neo shell \"select * from example\";\n\n ROWNUM  NAME    TIME(LOCAL)          VALUE   \n──────────────────────────────────────────────\n      1  tag-1   1970-01-01 09:00:00  10      \n      2  pump_2  2023-06-22 12:42:00  345.678 \n      3  tag-2   1970-01-01 09:00:00  11      \n      4  tag-3   1970-01-01 09:00:00  12      \n      5  pump_1  2023-06-22 12:42:00  234.567 \n5 rows fetched.\n```","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true}]}