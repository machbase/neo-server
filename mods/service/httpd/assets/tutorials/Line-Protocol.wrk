{"data":[{"id":"1693285063768724","contents":"# Write via http line protocol\n\n> For smooth practice, the following query should be run to prepare tables and data.","height":90,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693285080065134","contents":"CREATE TAG TABLE IF NOT EXISTS EXAMPLE (NAME VARCHAR(20) PRIMARY KEY, TIME DATETIME BASETIME, VALUE DOUBLE SUMMARIZED);","height":38,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693285063806653","contents":"Machbase Neo provides a compatibility api that accepts messages in a format of influxdata lineprotocol for writing data.\nThis api is convenient way to utilize existing client softwares that produce lineprotocol messages (e.g telegraf).\n\n> Since Machbase is different scheme of database from influxdb, some translations will be automatically occurred.\n    \n**Translation**\n\n| Machbase            | line protocol of influxdb                   |\n| ------------------- | ------------------------------------------- |\n| table               | db                                          |\n| tag name            | measurement + `.` + field name              |\n| time                | timestamp                                   |\n| value               | value of the field (if it is not a number type, will be ignored and not inserted) |\n\n**Line protocol example**\n\n```sh\ncurl -o - -X POST \"http://127.0.0.1:5654/metrics/write?db=example\" \\\n    --data-binary 'my-car speed=87.6 167038034500000'\n```\n\nThis example inserts data into table `tagdata` with `name`='my-car.speed', `value`=87.6 and `time`=167038034500000\n\n**telegraf.conf example**\n\nAs set telegraf's output config to use http port of Machbase Neo,\nthe metrics that collected by telegraf are directly inserted into Machbase Neo.\n\n```\n[[outputs.http]]\nurl = \"http://127.0.0.1:5654/metrics/write?db=example\"\ndata_format = \"influx\"\ncontent_encoding = \"gzip\"\n```\n","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true}]}