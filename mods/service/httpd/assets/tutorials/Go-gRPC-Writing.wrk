{"data":[{"id":"1693192542007502","contents":"# Go gRPC client program writing data\n\n> For smooth practice, the following query should be run to prepare tables and data.","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693192568082939","contents":"CREATE TAG TABLE EXAMPLE (NAME VARCHAR(20) PRIMARY KEY, TIME DATETIME BASETIME, VALUE DOUBLE SUMMARIZED);","height":200,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true},{"id":"1693192564913439","contents":"gRPC version of wave generator example is also available.\nSince it doesn't need to define custom data structures for payload,\nrelatively less lines of code are needed comparing to HTTP.\n\n### Step 1.\n\nCreate directory `grpc_wave`\n\n```sh\nmkdir grpc_wave && cd grpc_wave\n```\n\n### Step 2.\n\nFind [full source code from github](https://github.com/machbase/neo-docs/tree/main/examples/go/grpc_wave/grpc_wave.go)\n\n### Step 3.\n\nCopy source code and save it as `grpc_wave.go` or run script below in the directory.\n\n```sh\ncurl -o grpc_wave.go \"https://raw.githubusercontent.com/machbase/neo-docs/main/examples/go/grpc_wave/grpc_wave.go\"\n```\n\n### Step 4.\n\nInitialize go mod and prepare dependent modules.\n\n```sh\ngo mod init wave && go mod tidy\n```\n\n### Step 5. Run\n\n```sh\ngo run .\n```\n","height":200,"minimal":false,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true}]}