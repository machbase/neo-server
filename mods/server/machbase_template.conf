#################################################################################
# Copyright of this product 2013-2023
# MACHBASE Corporation (or Inc.) or its subsidiaries.
# All Rights reserved.
#################################################################################

#################################################################################
# Server
#################################################################################
PORT_NO = {{.PORT_NO}}

#################################################################################
# DB Path   ? => $MACHBASE_HOME
#################################################################################
DBS_PATH={{.DBS_PATH}}

#################################################################################
# Trace Log
#################################################################################
TRACE_LOGFILE_SIZE  = {{.TRACE_LOGFILE_SIZE}}
TRACE_LOGFILE_COUNT = {{.TRACE_LOGFILE_COUNT}}
TRACE_LOGFILE_PATH  = {{.TRACE_LOGFILE_PATH}}

#################################################################################
# MIN value: 0
# MAX value: 2
# Def Value: 0
#
# More detailed logs are written in the higher level.
# More levels you set, more details are written.
#################################################################################
TRACE_LOG_LEVEL = {{.TRACE_LOG_LEVEL}}

#################################################################################
# Error Call Stack & Core Generation
# GEN_CALLSTACK_FOR_ABORT_ERROR specifies whether to record call stacks
# after an abnormal server shutdown.
#
# GEN_CORE_FILE determines whether to record core files
# after an abnormal server shutdown.
#################################################################################
GEN_CALLSTACK_FOR_ABORT_ERROR = {{.GEN_CALLSTACK_FOR_ABORT_ERROR}}
GEN_CORE_FILE = {{.GEN_CORE_FILE}}

#################################################################################
# Default DURATION (Second)
# If DURATION_GAP is set to 0, it means that you can search all data.
# If set a non-zero value as duration, it can search the latest data
# for the specified duration.
#################################################################################
DURATION_GAP = {{.DURATION_GAP}}

#################################################################################
# Parallel Factor
#################################################################################
CPU_PARALLEL = {{.CPU_PARALLEL}}

#################################################################################
# MIN value: 1   (SEC)
# MAX value: unsigned int MAX (2^32 - 1)
# Def Value: 120 (SEC)
#
# The meta of a table is written to a disk at a specified time interval.
#################################################################################
DISK_COLUMNAR_TABLE_CHECKPOINT_INTERVAL_SEC = {{.DISK_COLUMNAR_TABLE_CHECKPOINT_INTERVAL_SEC}}

#################################################################################
# MIN value: 1   (SEC)
# MAX value: unsigned int MAX (2^32 - 1)
# Def Value: 120 (SEC)
#
# The meta of an index is written to a disk at a specified time interval.
#################################################################################
DISK_COLUMNAR_INDEX_CHECKPOINT_INTERVAL_SEC = {{.DISK_COLUMNAR_INDEX_CHECKPOINT_INTERVAL_SEC}}

#################################################################################
# MIN value: 0
# MAX value: 1
# Def Value: 0
#
# If this is set to 1, machbased tries to write column data when column partitions are full
# in order to minimize I/O frequency. If the value is set to 0, machbased writes column
# partitions as soon as possible to minimize data loss caused by power failure or
# process failure.
#################################################################################
DISK_COLUMNAR_TABLE_COLUMN_PART_FLUSH_MODE = {{.DISK_COLUMNAR_TABLE_COLUMN_PART_FLUSH_MODE}}

#################################################################################
# MIN value: 0
# MAX value: unsigned int MAX (2^32 - 1)
# Def Value: 3
#
# This indicates the I/O interval for writing data to the same column partition.
# If the gap between the last and current-write time is less than the specified value,
# it doesn't write. But if the partition is full, machbased writes it.
#################################################################################
DISK_COLUMNAR_TABLE_COLUMN_PART_IO_INTERVAL_MIN_SEC = {{.DISK_COLUMNAR_TABLE_COLUMN_PART_IO_INTERVAL_MIN_SEC}}

#################################################################################
# MIN value: 1
# MAX value: unsigned int MAX (2^32 - 1)
# Def Value: 3
#
# The number of disk I/O thread which writes appended data to disks.
#################################################################################
DISK_IO_THREAD_COUNT = {{.DISK_IO_THREAD_COUNT}}

#################################################################################
# MIN value: 1048576 (1MB)
# MAX value: unsigned long MAX (2^64 - 1)
#
# When machbased starts up, it reserves the amount of memory with this
# size in advance in order to reduce system call of the memory
# allocation from OS.
#################################################################################
DISK_COLUMNAR_TABLESPACE_MEMORY_MIN_SIZE = {{.DISK_COLUMNAR_TABLESPACE_MEMORY_MIN_SIZE}}

#################################################################################
# MIN value: 268435456 (256MB)
# MAX value: unsigned long MAX (2^64 - 1)
# If it is not specified, 8589934592(8GB) will be used.
# cf. 1073741824(1GB), 2147483648(2GB), 4294967296(4GB)
#     3221225472(3GB), 6442450944(6GB)
# Log tables that you created cannot use more than the specified size.
# It is recommended to set this value as 50%-80% of the physical memory size on your system.
#################################################################################
DISK_COLUMNAR_TABLESPACE_MEMORY_MAX_SIZE = {{.DISK_COLUMNAR_TABLESPACE_MEMORY_MAX_SIZE}}

#################################################################################
# MIN value: 1048576 (1MB)
# MAX value: unsigned long MAX (2^64 - 1)
#
# This value specifies the block-size of memory allocation for the column partition.
#################################################################################
DISK_COLUMNAR_TABLESPACE_MEMORY_EXT_SIZE = {{.DISK_COLUMNAR_TABLESPACE_MEMORY_EXT_SIZE}}

#################################################################################
# MIN value: 0
# MAX value: 100
# Def Value: 80
#
# If the current memory consumption of the disk column tablespace exceeds
# the specified memory limit, which is DISK_COLUMNAR_TABLESPACE_MEMORY_MAX_SIZE *
# (DISK_COLUMNAR_TABLESPACE_MEMORY_SLOWDOWN_HIGH_LIMIT_PCT / 100), the appending
# operation will be suspended.
#################################################################################
DISK_COLUMNAR_TABLESPACE_MEMORY_SLOWDOWN_HIGH_LIMIT_PCT = {{.DISK_COLUMNAR_TABLESPACE_MEMORY_SLOWDOWN_HIGH_LIMIT_PCT}}

#################################################################################
# MIN value: 0
# MAX value: unsigned int max (2^32 - 1)
# Def Value: 1
#
# If the current memory consumption of the disk column tablespace exceeds
# a threshold, the appending operation waits for the specified time (in milliseconds).
#################################################################################
DISK_COLUMNAR_TABLESPACE_MEMORY_SLOWDOWN_MSEC = {{.DISK_COLUMNAR_TABLESPACE_MEMORY_SLOWDOWN_MSEC}}

#################################################################################
# MIN value: 1048576 (1MB)
# MAX value: unsigned int max (2^32 - 1)
# Def Value: 2097152 (2MB)
#
# The double write file for data consistency and recovery is created with this
# size when creating a database.
#################################################################################
DISK_COLUMNAR_TABLESPACE_DWFILE_INT_SIZE = {{.DISK_COLUMNAR_TABLESPACE_DWFILE_INT_SIZE}}

#################################################################################
# MIN value: 1048576 (1MB)
# MAX value: unsigned int max (2^32 - 1)
# Def Value: 1048576 (1MB)
#
# If there is not enough space in a double write file, dwfile (double write file)
# will be extended by this value.
#################################################################################
DISK_COLUMNAR_TABLESPACE_DWFILE_EXT_SIZE = {{.DISK_COLUMNAR_TABLESPACE_DWFILE_EXT_SIZE}}

#################################################################################
# MIN value: 1073741824 (1GB)
# MAX value: unsigned long MAX (2^64 - 1)
# Def Value: 8589934592 (8GB)
#
# This property is the maximum size of the memory of machbased.
# If machbased's memory consumption exceeds this value, machbased tries to minimize
# memory usage by do the followings.
#  1. Suspend or abort appending rows to a table.
#  2. Delay building indexes until there is memory available.
#################################################################################
PROCESS_MAX_SIZE = {{.PROCESS_MAX_SIZE}}

#################################################################################
# MIN value: 0
# MAX value: 1
# Def Value: 0 (Not recorded)
#
# If this valus was set '1' and the appending program that used SQLAppend API
# had some errors, it will write error logs in $MACHBASE_HOME/trc/machbase.trc file.
# Caution: It makes the appending performance slow.
#          Refer to 'SQLAppendSetErrorCallback' API from CLI chapter.
#################################################################################
DUMP_APPEND_ERROR = {{.DUMP_APPEND_ERROR}}

#################################################################################
# MIN value: 0 (Disabled direct I/O)
# MAX value: 1
# Def Value: 1
#
# If the value is 1, the direct I/O is used to store data and
# indexes to disks, otherwise buffered I/O is used.
#################################################################################
DISK_TABLESPACE_DIRECT_IO_WRITE = {{.DISK_TABLESPACE_DIRECT_IO_WRITE}}

#################################################################################
# MIN value: 0 (Disabled direct I/O)
# MAX value: 1
# Def Value: 0
#
# If the value is 1, direct I/O is used to read data and
# indexes from the disks, otherwise buffered I/O is used.
#################################################################################
DISK_TABLESPACE_DIRECT_IO_READ = {{.DISK_TABLESPACE_DIRECT_IO_READ}}

#################################################################################
# MIN value: 0
# MAX value: 3
# Def Value: 1
#
# 0 - OFF.   No synchronize at all
# 1 - NORMAL Synchronize on DW file write, and backup
# 2 - FULL   Synchronize on disk file close, adjusting end RID, including 1
# 3 - EXTRA  Synchronize on every write, including 2
#################################################################################
DISK_TABLESPACE_SYNCHRONOUS = {{.DISK_TABLESPACE_SYNCHRONOUS}}

#################################################################################
# MIN value: 0
# MAX value: unsigned int MAX (2^32 - 1)
# Def Value: 3
#
# This value specifies the number of threads that build indexes.
# If the value is 0, the index building is disabled.
#################################################################################
INDEX_BUILD_THREAD_COUNT = {{.INDEX_BUILD_THREAD_COUNT}}

#################################################################################
# MIN value: 1
# MAX value: unsigned int MAX (2^32 - 1)
# Def Value: 3
#
# Specify maximum index partition in the memory for an index.
#################################################################################
INDEX_FLUSH_MAX_REQUEST_COUNT_PER_INDEX = {{.INDEX_FLUSH_MAX_REQUEST_COUNT_PER_INDEX}}

#################################################################################
# MIN value: 1
# MAX value: unsigned int MAX (2^32 - 1)
# Def Value: 100000
#
# Each thread of building index appends rows to a table by the unit of this value.
# After that, it switches to the next index.
#################################################################################
INDEX_BUILD_MAX_ROW_COUNT_PER_THREAD = {{.INDEX_BUILD_MAX_ROW_COUNT_PER_THREAD}}

#################################################################################
# MIN value: 0 (False)
# MAX value: 1 (True)
# Def Value: 0 (False)
#
# When machbased shuts down and this value is set to '1', machbased waits for all indexes
# to be built for all key values in its table. If not, machbased does not wait.
#################################################################################
DISK_COLUMNAR_INDEX_SHUTDOWN_BUILD_FINISH = {{.DISK_COLUMNAR_INDEX_SHUTDOWN_BUILD_FINISH}}

#################################################################################
# MIN value: 0
# MAX value: unsigned int MAX (2^32 - 1)
# Def Value: 0
#
# This value defines the first ID of CPU that machbased uses in the system.
#################################################################################
CPU_AFFINITY_BEGIN_ID = {{.CPU_AFFINITY_BEGIN_ID}}

#################################################################################
# MIN value: 0
# MAX value: unsigned int MAX (2^32 - 1)
# Def Value: 0
#
# This value defines the number of CPUs that machbased uses in the system.
# If the value is 0, machbased will use all CPUs in the system.
#################################################################################
CPU_AFFINITY_COUNT = {{.CPU_AFFINITY_COUNT}}

#################################################################################
# MIN value: 1
# MAX value: 1024
# Def Value: 3
#
# This value defines the number of threads building LSM partitions if
# the level of LSM index is greater than 0.
#################################################################################
INDEX_LEVEL_PARTITION_BUILD_THREAD_COUNT = {{.INDEX_LEVEL_PARTITION_BUILD_THREAD_COUNT}}

#################################################################################
# MIN value: 1
# MAX value: 1024
# Def Value: 1
#
# This value defines the number of threads deleting the partitions in the LSM index.
#################################################################################
INDEX_LEVEL_PARTITION_AGER_THREAD_COUNT = {{.INDEX_LEVEL_PARTITION_AGER_THREAD_COUNT}}

#################################################################################
# MIN value: 0
# MAX value: unsigned long MAX (2^64 - 1)
# Def Value: 2147483648 (2GB)
#
# This value defines the buffer size for the page cache.
#################################################################################
DISK_COLUMNAR_PAGE_CACHE_MAX_SIZE = {{.DISK_COLUMNAR_PAGE_CACHE_MAX_SIZE}}

#################################################################################
# MIN value: 0
# MAX value: 100
# Def Value: 70
#
# Set the maximum portion of LSM Index build memory.
# The portion is expressed as a percentage of the total memory that machbased uses.
# When it exceeds the limit, LSM partition merge thread will be blocked.
#################################################################################
INDEX_LEVEL_PARTITION_BUILD_MEMORY_HIGH_LIMIT_PCT = {{.INDEX_LEVEL_PARTITION_BUILD_MEMORY_HIGH_LIMIT_PCT}}


#################################################################################
# MIN value: 0
# MAX value: unsigned long MAX (2^64 - 1)
# Def Value: 2147483648 (2GB)
#
# If the memory size consumed by volatile tables exceeds the value of the property,
# no more insertion to volatile table is allowed.
#################################################################################
VOLATILE_TABLESPACE_MEMORY_MAX_SIZE = {{.VOLATILE_TABLESPACE_MEMORY_MAX_SIZE}}


#################################################################################
# MIN value: 0 (False)
# MAX value: 1 (True)
# Def Value: 1 (True)
#
# Result-Cache mode ON/OFF.
#################################################################################
RS_CACHE_ENABLE = {{.RS_CACHE_ENABLE}}

#################################################################################
# MIN value: 0
# MAX value: unsigned long MAX (2^64 - 1)
# Def Value: 1000 (msec)
#
# If the execution time of a query is slower than specified value, the results will
# be stored in the cache.
# If set to 0, all query results will be stored.
#################################################################################
RS_CACHE_TIME_BOUND_MSEC = {{.RS_CACHE_TIME_BOUND_MSEC}}

#################################################################################
# MIN value: 32 * 1024
# MAX value: unsigned long MAX (2^64 - 1)
# Def Value: 536870912 (512MB)
#
#  The maximum size of memory that cache can use.
#################################################################################
RS_CACHE_MAX_MEMORY_SIZE = {{.RS_CACHE_MAX_MEMORY_SIZE}}

#################################################################################
# MIN value: 1
# MAX value: unsigned long MAX (2^64 - 1)
# Def Value: 10000
#
# The maximum number of a query result that is stored in the cache.
#################################################################################
RS_CACHE_MAX_RECORD_PER_QUERY = {{.RS_CACHE_MAX_RECORD_PER_QUERY}}

#################################################################################
# MIN value: 1024
# MAX value: unsigned long MAX (2^64 - 1)
# Def Value: 16777216 (16MB)
#
# Memory size of a query result that is stored in the cache.
# It if exceeds the memory size, cache does not save the results.
#################################################################################
RS_CACHE_MAX_MEMORY_PER_QUERY = {{.RS_CACHE_MAX_MEMORY_PER_QUERY}}

#################################################################################
# MIN value: 0 (False)
# MAX value: 1 (True)
# Def Value: 0 (False)
#
# Result-Cache Approximate result mode ON/OFF.
# When cache is enabled, cached results can be used for getting approximate values.
# To get the exact values, set it to 0.
#################################################################################
RS_CACHE_APPROXIMATE_RESULT_ENABLE = {{.RS_CACHE_APPROXIMATE_RESULT_ENABLE}}

#################################################################################
# MIN value: 0 (False)
# MAX value: 1 (True)
# Def Value: 1 (True)
#
# Remote access allow/disallow flag.
# If it is 0, remote access will not be granted.
#################################################################################
GRANT_REMOTE_ACCESS = {{.GRANT_REMOTE_ACCESS}}

#################################################################################
# MIN value: 0 (False)
# MAX value: 1 (True)
# Def Value: 1 (True)
#
# This value indicates that it is allowed to append a new value whose arrival time is
# less than the latest value's in a table. If it is set to 0, it is not allowed.
#################################################################################
DISK_COLUMNAR_TABLE_TIME_INVERSION_MODE = {{.DISK_COLUMNAR_TABLE_TIME_INVERSION_MODE}}

#################################################################################
# It indicates the default value of LSM MAX_LEVEL for BITMAP/KEYWORD indexes
# min: 0, max: 3, default: 2
#################################################################################
DEFAULT_LSM_MAX_LEVEL = {{.DEFAULT_LSM_MAX_LEVEL}}

#################################################################################
# MIN value: 1048576    (1024 * 1024)
# MAX value: unsigned long MAX (2^64 - 1)
# Def value: 104857600  (100 * 1024 * 1024)
#
# Limits total memory consumption during each query execution.
#################################################################################
MAX_QPX_MEM = {{.MAX_QPX_MEM}}

#################################################################################
# Min value: 0
# Max value: 2
# Def Value: 2
#
# [TAG TABLE]
# It determines whether it insert TAG META columns automatically
# when the corresponding meta columns are not found during INSERT or APPEND.
#
# 0: DO NOT insert tag name and metadata columns
# 1: Insert tag name (excluding other metadata columns)
# 2: Insert tag name and other metadata columns (default)
#################################################################################
TAGDATA_AUTO_META_INSERT = {{.TAGDATA_AUTO_META_INSERT}}

#################################################################################
# MIN value: 0 (OFF)
# MAX value: unsigned long MAX (2^64 - 1)
# DEF value: 0 (OFF)
#
# Set timeout of communicating between server and client.
#################################################################################
SESSION_IDLE_TIMEOUT_SEC = {{.SESSION_IDLE_TIMEOUT_SEC}}

#################################################################################
# Rest-API port
#################################################################################
HTTP_PORT_NO = {{.HTTP_PORT_NO}}

#################################################################################
# Maximum memory per web session.
# Default Value: 536870912 (512MB)
#################################################################################
HTTP_MAX_MEM = {{.HTTP_MAX_MEM}}

#################################################################################
# Min Value:     0
# Max Value:     1
# Default Value: 0
#
# Enable REST-API service.
#################################################################################
HTTP_ENABLE = {{.HTTP_ENABLE}}

#################################################################################
# Min Value:     0
# Max Value:     1
# Default Value: 0
#
# Enable Basic Authentication for Rest-API service
#################################################################################
HTTP_AUTH = {{.HTTP_AUTH}}

#################################################################################
# This property defines the behavior of a LOOKUP table
# when a duplicate key tries to update a row with the same pre-existing key
# while appending on the table.
#
# 0: Returns error.
# 1: Updates the corresponding row.
#################################################################################
LOOKUP_APPEND_UPDATE_ON_DUPKEY = {{.LOOKUP_APPEND_UPDATE_ON_DUPKEY}}

#################################################################################
# MIN value: 0 (unlimited)
# MAX value: unsigned int MAX (2^32 - 1)
# DEF value: 3000000
#
# Limit the number of rows to fetch in a rollup thread.
#################################################################################
ROLLUP_FETCH_COUNT_LIMIT = {{.ROLLUP_FETCH_COUNT_LIMIT}}

HANDLE_LIMIT = {{.HANDLE_LIMIT}}

TAG_CACHE_MAX_MEMORY_SIZE = {{.TAG_CACHE_MAX_MEMORY_SIZE}}
DISK_TAG_INDEX_BLOCKS = {{.DISK_TAG_INDEX_BLOCKS}}
STREAM_THREAD_COUNT = {{.STREAM_THREAD_COUNT}}
TAG_TABLE_META_MAX_SIZE = {{.TAG_TABLE_META_MAX_SIZE}}
DISK_BUFFER_COUNT = {{.DISK_BUFFER_COUNT}}
TAG_CACHE_ENABLE = {{.TAG_CACHE_ENABLE}}
